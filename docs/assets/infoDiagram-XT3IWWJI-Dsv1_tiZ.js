import{_ as r,l as e,H as t,e as s,I as a}from"./FlexiResume-DY438Mxe.js";import{p as o}from"./treemap-6Y5VK53G-BrmVDuNO.js";import"./framer-motion-CXdLbqfN.js";import"./react-vendor-DQmNySUk.js";import"./vendor-Rg6bv-5R.js";import"./react-icons-mdDy3BM0.js";import"./index-p2dfl744.js";import"./react-markdown-BnssULAo.js";import"./_baseUniq-BliQ_Ojc.js";import"./_basePickBy-BaOwgwu9.js";import"./clone-7Pe9uRbx.js";var i={parse:r(async r=>{const t=await o("info",r);e.debug(t)},"parse")},n={version:a.version+""},p={parser:i,db:{getVersion:r(()=>n.version,"getVersion")},renderer:{draw:r((r,a,o)=>{e.debug("rendering info diagram\n"+r);const i=t(a);s(i,100,400,!0),i.append("g").append("text").attr("x",100).attr("y",40).attr("class","version").attr("font-size",32).style("text-anchor","middle").text(`v${o}`)},"draw")}};export{p as diagram};
